@page "/contacts"
@using System.Globalization
@inject IJSRuntime jSRuntime
@rendermode InteractiveServer

<PageTitle>WoodArtCons - Contacte</PageTitle>

@if (!isloading && culture != null)
{
    var contactUs = culture switch { "ru-RU" => "Свяжитесь с нами", "en-US" => "Contact Us", "ro-RO" => "Contactează-ne" };
    var contactInfo = culture switch { "ru-RU" => "Контактная информация", "en-US" => "Contact Information", "ro-RO" => "Informații de contact" };
    var address = culture switch { "ru-RU" => "Адрес", "en-US" => "Address", "ro-RO" => "Adresă" };
    var sendMessage = culture switch { "ru-RU" => "Отправить сообщение", "en-US" => "Send a Message", "ro-RO" => "Trimite un mesaj" };
    var name = culture switch { "ru-RU" => "Имя", "en-US" => "Name", "ro-RO" => "Nume" };
    var email = culture switch { "ru-RU" => "Email", "en-US" => "Email", "ro-RO" => "Email" };
    var phone = culture switch { "ru-RU" => "Телефон", "en-US" => "Phone", "ro-RO" => "Telefon" };
    var subject = culture switch { "ru-RU" => "Тема", "en-US" => "Subject", "ro-RO" => "Subiect" };
    var message = culture switch { "ru-RU" => "Сообщение", "en-US" => "Message", "ro-RO" => "Mesaj" };
    var send = culture switch { "ru-RU" => "Отправить", "en-US" => "Send", "ro-RO" => "Trimite" };

    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
        <MudPaper Elevation="3" Class="pa-8" Style="border-radius: 16px;">
            <MudText Typo="Typo.h4" Class="mb-6" Style="font-weight: 600; color: #1f2937;">@contactUs</MudText>

            <MudGrid>
                <MudItem xs="12" md="6">
                    <MudText Typo="Typo.h6" Class="mb-4" Style="font-weight: 600;">@contactInfo</MudText>

                    <MudList>
                        <MudListItem Icon="@Icons.Material.Filled.Business">
                            <MudText Style="font-weight: 500;">WoodArtCons</MudText>
                        </MudListItem>
                        <MudListItem Icon="@Icons.Material.Filled.LocationOn">
                            <MudText>@address: Strada Vadul lui Vodă 110, Chișinău, Republica Moldova</MudText>
                        </MudListItem>
                        <MudListItem Icon="@Icons.Material.Filled.Email">
                            <MudText>woodartcons@gmail.com</MudText>
                        </MudListItem>
                        <MudListItem Icon="@Icons.Material.Filled.Phone">
                            <MudText>Valerii Gukov: +37360201373</MudText>
                        </MudListItem>
                        <MudListItem Icon="@Icons.Material.Filled.Phone">
                            <MudText>Andrei Covalenco: +37368312964</MudText>
                        </MudListItem>
                        <MudListItem Icon="@Icons.Material.Filled.Phone">
                            <MudText>Petru Damaschin: +37379356131</MudText>
                        </MudListItem>
                    </MudList>
                </MudItem>

                <MudItem xs="12" md="6">
                    <OfferRequestForm Culture="@culture" />
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudContainer>
}
else
{
    <!-- Simple loading state -->
    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
        <MudPaper Elevation="3" Class="pa-8" Style="border-radius: 16px;">
            <MudText Typo="Typo.h4" Class="mb-6" Style="font-weight: 600; color: #1f2937;">Contactează-ne</MudText>
            <MudText Typo="Typo.body1" Class="mb-4">Loading...</MudText>
        </MudPaper>
    </MudContainer>
}

@code {
    private bool isloading = true;
    private string culture;
    // private ContactForm _contactForm = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            culture = await jSRuntime.InvokeAsync<string>("getLanguage");
            if (string.IsNullOrEmpty(culture))
            {
                culture = "ro-RO";
            }
            isloading = false;
            StateHasChanged();
        }
    }

    private async Task HandleValidSubmit()
    {
        var successMessage = culture switch
        {
            "ru-RU" => "Сообщение успешно отправлено! Мы свяжемся с вами в ближайшее время.",
            "en-US" => "Message sent successfully! We will contact you soon.",
            "ro-RO" => "Mesajul a fost trimis cu succes! Vă vom contacta în curând."
        };
        await jSRuntime.InvokeVoidAsync("alert", successMessage);
        // _contactForm = new ContactForm();
    }

    // private class ContactForm
    // {
    //     [Required]
    //     public string Name { get; set; }

    //     [Required]
    //     [EmailAddress]
    //     public string Email { get; set; }

    //     public string Phone { get; set; }

    //     [Required]
    //     public string Subject { get; set; }

    //     [Required]
    //     public string Message { get; set; }
    // }
}
