@page "/"
@page "/home"
@using System.Globalization
@using WoodArtCons.Interfaces
@using WoodArtCons.Shared.DataTransferObjects
@inject IJSRuntime jSRuntime
@inject NavigationManager NavigationManager
@inject ICategoryManagerService categoryManager
@inject ICategoryProductManagerService categoryProduct
@rendermode InteractiveServer

<PageTitle>WoodArtCons</PageTitle>

@if (!isLoading && culture != null)
{
    <div style="background-color: #f1f5f9; padding: 80px 0;">
        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
            <MudGrid>
                <MudItem xs="12" md="6" Class="d-flex flex-column justify-center">
                    <MudText Typo="Typo.h3" Class="mb-4" Style="font-weight: 700; color: #1f2937; line-height: 1.2;">
                        @welcomeMessage
                    </MudText>
                    <MudText Typo="Typo.body1" Class="mb-6" Style="color: #4b5563; line-height: 1.6; font-size: 1.1rem;">
                        @companyDescription
                    </MudText>
                    <div>
                        <MudButton Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   Size="Size.Large"
                                   OnClick="@(() => NavigationManager.NavigateTo("/catalog"))"
                                   Style="background-color: #f97316; color: white; padding: 12px 24px; font-weight: 600; text-transform: none; border-radius: 8px;">
                            @exploreProducts
                        </MudButton>
                    </div>
                </MudItem>
                <MudItem xs="12" md="6">
                    <OfferRequestForm Culture="@culture" />
                </MudItem>
            </MudGrid>
        </MudContainer>
    </div>

    <!-- Featured Products Section -->
    <div style="background-color: white; padding: 80px 0;">
        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
            <MudText Typo="Typo.h4" Class="mb-8" Style="font-weight: 600; color: #1f2937; text-align: left;">
                @featuredProductsTitle
            </MudText>

            <MudGrid>
                @foreach (var product in categoryProducts)
                {
                    var productLink = GetProductLink(product);
                    <MudItem xs="12" sm="6" md="4" @onclick="@(() => NavigationManager.NavigateTo(productLink))">
                        <div style="background-color: #f8fafc; border: 1px solid #e2e8f0; border-radius: 12px; overflow: hidden; height: 100%;">
                            <!-- Product Image Placeholder -->
                            <MudCardMedia Image="@(product.ImageSrc ?? "Images/placeholder.jpg")" Height="200" />
                            <!-- Product Content -->
                            <div style="padding: 20px;">
                                <MudText Typo="Typo.h6" Class="mb-2" Style="font-weight: 600; color: #1f2937;">
                                    @GetProductName(product)
                                </MudText>
                                <MudButton Variant="Variant.Text"
                                           Color="Color.Primary"
                                           Size="Size.Small"
                                           Style="color: #f97316; font-weight: 600; text-transform: none; padding: 8px 0;"
                                           @onclick="@(() => NavigationManager.NavigateTo(productLink))">
                                    Vezi detalii
                                </MudButton>
                            </div>
                        </div>
                    </MudItem>
                }
            </MudGrid>

            <!-- Why Choose Us Section -->
            <MudText Typo="Typo.h4" Class="mb-6" Style="font-weight: 600; color: #1f2937;">@whyChooseUs</MudText>
            <MudGrid>
                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="3" Class="h-100 pa-6" Style="border-radius: 12px;">
                        <div class="d-flex align-center mb-4">
                            <MudIcon Icon="@Icons.Material.Filled.Verified" Color="Color.Primary" Size="Size.Large" Class="mr-3" />
                            <MudText Typo="Typo.h6" Style="font-weight: 600;">@quality</MudText>
                        </div>
                        <MudText Typo="Typo.body2" Style="line-height: 1.6;">@qualityDescription</MudText>
                    </MudCard>
                </MudItem>
                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="3" Class="h-100 pa-6" Style="border-radius: 12px;">
                        <div class="d-flex align-center mb-4">
                            <MudIcon Icon="@Icons.Material.Filled.Settings" Color="Color.Secondary" Size="Size.Large" Class="mr-3" />
                            <MudText Typo="Typo.h6" Style="font-weight: 600;">@customSolutions</MudText>
                        </div>
                        <MudText Typo="Typo.body2" Style="line-height: 1.6;">@customSolutionsDescription</MudText>
                    </MudCard>
                </MudItem>
                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="3" Class="h-100 pa-6" Style="border-radius: 12px;">
                        <div class="d-flex align-center mb-4">
                            <MudIcon Icon="@Icons.Material.Filled.Engineering" Color="Color.Success" Size="Size.Large" Class="mr-3" />
                            <MudText Typo="Typo.h6" Style="font-weight: 600;">@experience</MudText>
                        </div>
                        <MudText Typo="Typo.body2" Style="line-height: 1.6;">@experienceDescription</MudText>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </MudContainer>
    </div>
}
else
{
    <div style="display: flex; justify-content: center; align-items: center; height: 100vh; width: 100vw;">
        <MudProgressCircular Color="Color.Warning" Size="Size.Large" Indeterminate="true" />
    </div>
}

@code {
    private bool isLoading = true;
    private string culture;
    string welcomeMessage;
    string companyDescription;
    string exploreProducts;
    string featuredProductsTitle;
    string whyChooseUs;
    string quality;
    string qualityDescription;
    string customSolutions;
    string customSolutionsDescription;
    string experience;
    string experienceDescription;
    private List<CategoryModelDto>? categories;
    private List<CategoryProductModelDto>? categoryProducts = new List<CategoryProductModelDto>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            culture = await jSRuntime.InvokeAsync<string>("getLanguage");
            if (string.IsNullOrEmpty(culture))
            {
                culture = "ro-RO";
            }
            welcomeMessage = culture switch
            {
                "ru-RU" => "Добро пожаловать в WoodArtCons",
                "en-US" => "Welcome to WoodArtCons",
                "ro-RO" => "Bine ați venit la WoodArtCons",
            };
            companyDescription = culture switch
            {
                "ru-RU" => "Мы производим высококачественные изделия из дерева, от мебели до уличных скамеек и мусорных урн. С большим опытом и вниманием к деталям, мы стремимся предоставлять долговечные и эстетически привлекательные решения для каждого клиента.",
                "en-US" => "We manufacture high-quality wooden products, from furniture to street benches and trash bins. With extensive experience and attention to detail, we are dedicated to providing durable and aesthetic solutions for every client.",
                "ro-RO" => "Fabricăm produse de înaltă calitate din lemn, de la mobilier până la bănci stradale și coșuri de gunoi. Cu experiență vastă și atenție la detalii, suntem dedicați să oferim soluții durabile și estetice pentru fiecare client.",
            };
            exploreProducts = culture switch
            {
                "ru-RU" => "Исследовать продукты",
                "en-US" => "Explore Products",
                "ro-RO" => "Explorează produsele",
            };
            featuredProductsTitle = culture switch
            {
                "ru-RU" => "Популярные продукты",
                "en-US" => "Featured Products",
                "ro-RO" => "Produse populare",
            };
            whyChooseUs = culture switch { "ru-RU" => "Почему выбирают нас", "en-US" => "Why Choose Us", "ro-RO" => "De ce să ne alegeți" };
            quality = culture switch { "ru-RU" => "Качество", "en-US" => "Quality", "ro-RO" => "Calitate" };
            qualityDescription = culture switch
            {
                "ru-RU" => "Мы используем только лучшие материалы и производственные технологии, чтобы обеспечить долговечность и высокое качество продукции.",
                "en-US" => "We use only the best materials and production techniques to ensure durable and high-quality products.",
                "ro-RO" => "Utilizăm doar cele mai bune materiale și tehnici de producție pentru a asigura produse durabile și de înaltă calitate."
            };
            customSolutions = culture switch { "ru-RU" => "Индивидуальные решения", "en-US" => "Custom Solutions", "ro-RO" => "Soluții personalizate" };
            customSolutionsDescription = culture switch
            {
                "ru-RU" => "Независимо от ваших потребностей, мы можем создать индивидуальные продукты, идеально соответствующие вашим требованиям.",
                "en-US" => "Whatever your needs, we can create customized products that perfectly fit your requirements.",
                "ro-RO" => "Indiferent de nevoile dvs., putem crea produse personalizate care să se potrivească perfect cerințelor dvs."
            };
            experience = culture switch { "ru-RU" => "Опыт", "en-US" => "Experience", "ro-RO" => "Experiență" };
            experienceDescription = culture switch
            {
                "ru-RU" => "С многолетним опытом в отрасли, наша команда профессионалов знает, как выполнить даже самые сложные запросы.",
                "en-US" => "With years of industry experience, our team of professionals knows how to fulfill even the most demanding requests.",
                "ro-RO" => "Cu ani de experiență în industrie, echipa noastră de profesioniști știe cum să îndeplinească chiar și cele mai exigente solicitări."
            };

            categories = await categoryManager.GetAllCategories();
            var topCategories = categories.Take(3).ToList();
            foreach (var category in topCategories)
            {
                var products = await categoryProduct.GetProductsByCategoryId(category.Id);
                var firstProduct = products.FirstOrDefault();
                if (firstProduct != null)
                {
                    categoryProducts.Add(new CategoryProductModelDto
                    {
                        Id = firstProduct.Id,
                        CategoryId = firstProduct.CategoryId,
                        NameRo = firstProduct.NameRo,
                        NameRu = firstProduct.NameRu,
                        NameEn = firstProduct.NameEn,
                        ImageSrc = firstProduct.ImageSrc,
                        Link = firstProduct.Link,
                        DescriptionRo = firstProduct.DescriptionRo,
                        DescriptionRu = firstProduct.DescriptionRu,
                        DescriptionEn = firstProduct.DescriptionEn,
                    });
                }
            }

            isLoading = false;
            StateHasChanged();
        }
    }

    private string GetProductName(CategoryProductModelDto product)
    {
        return culture switch
        {
            "ru-RU" => product.NameRu,
            "en-US" => product.NameEn,
            "ro-RO" => product.NameRo,
        };
    }

    private string GetProductLink(CategoryProductModelDto product)
    {
        // Find the category for this product
        var category = categories?.FirstOrDefault(c => c.Id == product.CategoryId);
        
        // If category is for gallery, use gallery link, otherwise use catalog link
        if (category?.IsForGalery == true)
        {
            return $"/gallery/{product.CategoryId}/{product.Id}";
        }
        else
        {
            return $"/catalog/{product.CategoryId}/{product.Id}";
        }
    }
}
